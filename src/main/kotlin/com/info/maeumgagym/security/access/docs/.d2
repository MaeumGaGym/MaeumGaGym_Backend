style: {
  fill: "#121212"
}

vars: {
  white: "#fefefe"
  blue: "#333388"

  blockStroke: "#888888"
  blockColor: "#333333"
  background: "#121212"
}

classes: {
  Block: {
    style: {
      font-color: ${white}
      fill: ${blockColor}
      stroke: ${blockStroke}
    }
  }

  ImplementsConnection: {
    style: {
      stroke: ${white}
      font-color: ${white}
      stroke-dash: 3
    }
    target-arrowhead.style.filled: false
    label: implements
  }

  DependencyConnection: {
    style: {
      stroke: ${white}
      font-color: ${white}
    }
    label: dependency
  }

  CallFunctionConnection: {
    style: {
      stroke: ${blue}
      font-color: ${white}
    }
    target-arrowhead.shape: arrow
  }
}

delegateInterceptor: <<Class>>\nAccess Manager\nDelegate Interceptor {
  class: Block
}

delegateInterceptor -> manager: {
  class: CallFunctionConnection
  label: checkAccessAllowed()
}

manager: <<Interface>>\nAccess Manager {
  class: Block
}

managerImpl: <<Class>>\nAccess Manager Impl {
  class: Block
}

managerImpl -> manager: {class: ImplementsConnection}
manager -> managerImpl: {
  class: CallFunctionConnection
  label: checkAccessAllowed()
}
managerImpl -> checker: {
  class: CallFunctionConnection
  label: check()
}

checker: <<Interface>>\nAnnotation Based\nUser Authentication Checker {
  class: Block
}

checkerComposite: <<Class>>\nAnnotation Based\nUser Authentication Checker Composite {
  class: Block
}

checkerComposite -> checker: {class: ImplementsConnection}
checker -> checkerComposite: {
  class: CallFunctionConnection
  label: check()
}

checkerImpls: <<Class>>\Annotation Based\nUser Authentication Checker Impl(s) {
  class: Block
}

checkerComposite -> checkerImpls: {
  class: CallFunctionConnection
  label: check()
}
